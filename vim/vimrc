syntax on
filetype plugin on
set t_Co=256
set number
set mouse=a
set nobackup
set cb=unnamedplus
set nofoldenable
set foldmethod=indent
set wildmenu
set wildmode=list:longest
set wildignore=*.docx,*.jpg,*.png,*.gif,*.pdf,*.exe*,*.flv,*.img,*.xlxs
set ts=4 sts=4 sw=4 et ai si
se cpt+=k
se cpt+=s
se cpt+=i
se cpt+=t
set incsearch

set cursorline
set culopt=number

set timeoutlen=80
set ttimeoutlen=500
let mapleader=";"
let maplocalleader=","

nnoremap <LEADER>g <C-w>s
nnoremap <LEADER>f <C-w>v
nnoremap <TAB> <C-w>w
noremap <LEADER>q <c-w>q
nnoremap <LEADER>m :find *<CR>
nnoremap <LEADER>t :tabnew<CR>
nnoremap <LEADER>n :tabnext<CR>
nnoremap <LEADER>tm :tabmove
nnoremap <LEADER>tc :tabclose<CR>
nnoremap <LEADER>to :tabonly<CR>
inoremap <LEADER>j <esc>
nnoremap <LEADER><SPACE> :w<CR>:so ~/.vimrc<CR>

iab xx <BS><ESC>A<LEFT><LEFT>
iab xxbk <BS><ESC>A{<SPACE>}<LEFT>
iab xxbc <BS><ESC>A[<SPACE>]<LEFT>
iab qq <BS>",<ESC>A"
iab qqs <BS>',<ESC>A'

colorscheme colorcfg
let bdir = '/home/scarlettjwork/env/vim/'

function! SafeSourceVimFiles()
  let current_dir = expand('%:p:h')
  let vim_files = split(globpath(current_dir, '*.vim'), '\n')
  for file in vim_files
    " Example check: Avoid sourcing if the file contains syntax commands
    if match(readfile(file), 'syntax') == -1
      execute 'source' file
    endif
  endfor
endfunction

autocmd BufReadPost,BufNewFile * call SafeSourceVimFiles()

augroup python_config
    autocmd!
    autocmd FileType python setlocal ts=4 sw=4 sts=4 et si
augroup END

augroup lang_synt
    autocmd!
    au BufRead,BufNewFile *.c,*.h source /home/scarlettjwork/env/vim/c.vim
    au BufRead,BufNewFile *.c,*.h source  /home/scarlettjwork/env/vim/cab.vim
augroup END

nnoremap <leader>c :call FoldColumnToggle()<cr>
function! FoldColumnToggle()
    if &foldcolumn
        setlocal foldcolumn=0
    else
        setlocal foldcolumn=4
    endif
endfunction

let g:quickfix_is_open = 0
nnoremap <leader>c :call QuickfixToggle()<cr>
function! QuickfixToggle()
    if g:quickfix_is_open
        cclose
        let g:quickfix_is_open = 0
        execute g:quickfix_return2_window . "wincmd w"
    else
        let g:quickfix_return2_window = winnr()
        copen
        let g:quickfix_is_open = 1
    endif
endfunction
